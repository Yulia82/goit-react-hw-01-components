{"version":3,"sources":["components/default.jpg","components/profile/Profile.styles.jsx","components/profile/Profile.jsx","components/Title.styles.jsx","components/statistics/Statistics.styles.jsx","components/statistics/Statistics-item.jsx","components/statistics/Statistics.jsx","utils/random-color.js","components/friendList/FriendList.styles.jsx","components/friendList/FriendListItem.jsx","components/friendList/FriendList.jsx","components/transaction/TransactionItem.jsx","components/transaction/TransactionHistory.styles.jsx","components/transaction/TransactionHistory.jsx","App.js","index.js"],"names":["Container","styled","div","Avatar","img","Name","p","Datauser","Stats","ul","Item","li","Description","Quantity","span","Label","Profile","name","tag","location","src","stats","alt","followers","views","likes","defaultProps","defaultImage","Title","h2","Statlist","ItemStat","props","colorLi","Statistic","section","Percentage","StatisticItem","label","percentage","Statistics","title","map","id","colorItem","r","Math","floor","random","g","b","toString","randomColor","ItemFriend","AvatarFriends","Status","isOnline","FriendLst","FriendListItem","avatar","width","FriendList","friends","TransactionItem","type","amount","currency","TransactionHist","table","TheadStyle","thead","TrStyle","tr","TransactionHistory","items","App","user","statistical","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7486dba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  background-color: rgb(248, 248, 248);\n\n  width: 370px;\n  margin-top: 40px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-top: 20px;\n\n  border-radius: 5%;\n  box-shadow: 4px 4px 2px 1px rgba(0, 0, 255, 0.2);\n`;\n\nexport const Avatar = styled.img`\n  // display: block;\n  width: 210px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 8px;\n  font-size: 22px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const Datauser = styled.p`\n  text-align: center;\n  margin-bottom: 8px;\n  color: rgb(80, 79, 79);\n`;\n\nexport const Stats = styled.ul`\n  display: flex;\n  margin-left: -10px;\n  margin-top: -10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: 10px;\n  margin-top: 10px;\n  flex-basis: calc(100% / 3 - 10px);\n\n  &:not(:last-child) {\n    border-right: solid rgba(0, 0, 255, 0.2);\n  }\n`;\n\nexport const Description = styled.div`\n  border-bottom: solid rgba(0, 0, 255, 0.2);\n`;\n\nexport const Quantity = styled.span`\n  font-weight: bold;\n  padding-bottom: 15px;\n`;\n\nexport const Label = styled.span`\n  color: rgb(80, 79, 79);\n  margin-bottom: 8px;\n  padding-top: 8px;\n`;\n","import defaultImage from \"../default.jpg\";\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  Avatar,\n  Name,\n  Datauser,\n  Stats,\n  Item,\n  Description,\n  Quantity,\n  Label,\n} from \"./Profile.styles\";\n\nexport const Profile = ({ name, tag, location, src, stats }) => {\n  return (\n    <Container>\n      <Description>\n        <Avatar\n          src={src}\n          alt=\"Аватар пользователя\"\n          // class=\"avatar\"\n        />\n        <Name>{name}</Name>\n        <Datauser>{tag}</Datauser>\n        <Datauser>{location}</Datauser>\n      </Description>\n\n      <Stats>\n        <Item>\n          <Label>Followers</Label>\n          <Quantity>{stats.followers}</Quantity>\n        </Item>\n        <Item>\n          <Label>Views</Label>\n          <Quantity>{stats.views}</Quantity>\n        </Item>\n        <Item>\n          <Label>Likes</Label>\n          <Quantity>{stats.likes}</Quantity>\n        </Item>\n      </Stats>\n    </Container>\n  );\n};\n\nProfile.defaultProps = {\n  src: defaultImage,\n};\n\nProfile.propTypes = {\n  src: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n  text-transform: uppercase;\n  padding: 20px 0px;\n`;\n","import styled from \"@emotion/styled\";\n// import { randomColor } from '../../utils/'\n\nexport const Statlist = styled.ul`\n  display: flex;\n  margin-left: -10px;\n  margin-top: -10px;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 10px;\n`;\n\nexport const ItemStat = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: 10px;\n  margin-top: 10px;\n  flex-basis: calc(100% / 4 - 10px);\n\n  background-color: ${props => props.colorLi};\n`;\n\nexport const Statistic = styled.section`\n  background-color: rgb(248, 248, 248);\n\n  width: 370px;\n  margin-top: 40px;\n  margin-right: auto;\n  margin-left: auto;\n\n  border-radius: 5%;\n  box-shadow: 4px 4px 2px 1px rgba(0, 0, 255, 0.2);\n`;\n\nexport const Percentage = styled.span`\n  font-weight: bold;\n  padding-bottom: 15px;\n`;\n\nexport const Label = styled.span`\n  color: #000000;\n  margin-bottom: 8px;\n  padding-top: 8px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Percentage, Label } from \"./Statistics.styles\";\n\nexport const StatisticItem = ({ label, percentage }) => {\n  return (\n    <>\n      <Label>{label}</Label>\n      <Percentage>{percentage}</Percentage>\n    </>\n  );\n};\n\nStatisticItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport { Title } from \"../Title.styles\";\nimport { ItemStat, Statlist, Statistic } from \"./Statistics.styles\";\nimport { randomColor } from \"../../utils/random-color\";\nimport { StatisticItem } from \"./Statistics-item\";\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <Statistic>\n      {title && <Title>{title}</Title>}\n\n      <Statlist>\n        {stats.map(({ id, label, percentage }) => {\n          const colorItem = randomColor();\n          return (\n            <ItemStat key={id} colorLi={colorItem}>\n              <StatisticItem label={label} percentage={percentage} />\n            </ItemStat>\n          );\n        })}\n      </Statlist>\n    </Statistic>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","export function randomColor() {\n  const r = Math.floor(Math.random() * (256 - 100 + 1) + 100);\n  const g = Math.floor(Math.random() * (256 - 100 + 1) + 100);\n  const b = Math.floor(Math.random() * (256 - 100 + 1) + 100);\n  const color = \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\n  return color;\n}\n","import styled from \"@emotion/styled\";\n\nexport const ItemFriend = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-right: 40px;\n  padding-left: 40px;\n\n  border-bottom: 1px solid #eeeeee;\n  border-radius: 12px;\n\n  background-color: #ffffff;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AvatarFriends = styled.img`\n  width: 76px;\n`;\n\nexport const Name = styled.p`\n  font-size: 26px;\n  font-weight: bold;\n`;\n\nexport const Status = styled.span`\n  width: 26px;\n  height: 26px;\n  border-radius: 50%;\n  border: 2px solid #000000;\n  background-color: ${props => (props.isOnline ? \"green\" : \"red\")};\n`;\n\nexport const FriendLst = styled.ul`\n  width: 370px;\n  margin-top: 60px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 20px;\n  background-color: rgb(248, 248, 248);\n`;\n","import PropTypes from \"prop-types\";\nimport defaultImage from \"../default.jpg\";\nimport { AvatarFriends, Name, Status } from \"./FriendList.styles\";\n\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <>\n      <Status isOnline={isOnline}></Status>\n      <AvatarFriends src={avatar} alt=\"\" width=\"48\" />\n      <Name>{name}</Name>\n      </>\n  );\n};\n\nFriendListItem.defaultProps = {\n  avatar: defaultImage,\n};\n\nFriendListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport { FriendListItem } from \"./FriendListItem\";\nimport { ItemFriend, FriendLst } from \"./FriendList.styles\";\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <FriendLst>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <ItemFriend key={id}>\n          <FriendListItem\n          avatar={avatar}\n          name={name}\n          isOnline={isOnline}\n        />\n        </ItemFriend>\n      ))}\n    </FriendLst>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  )\n};\n","import PropTypes from \"prop-types\";\n\nexport const TransactionItem = ({ type, amount, currency }) => {\n  return (\n    <>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </>\n  );\n};\n\nTransactionItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const TransactionHist = styled.table`\n  margin-top: 60px;\n  margin-right: auto;\n  margin-left: auto;\n\n  width: 1000px;\n  border: solid rgba(0, 0, 255, 0.2);\n`;\n\nexport const TheadStyle = styled.thead`\n  background-color: rgba(0, 0, 255, 0.2);\n  height: 60px;\n`;\n\nexport const TrStyle = styled.tr`\n  text-align: center;\n  height: 50px;\n  &:nth-child(even) {\n    background-color: rgba(0, 0, 255, 0.12);\n  }\n`;\n\nexport const TrStyleEven = styled.tr`\n  text-align: center;\n  height: 50px;\n  background-color: rgba(0, 0, 255, 0.25);\n`;\n","import PropTypes from \"prop-types\";\nimport { TransactionItem } from \"./TransactionItem\";\nimport { TransactionHist, TheadStyle, TrStyle } from \"./TransactionHistory.styles\";\n\nexport const TransactionHistory = ({ items }) => {\n  return (\n    <TransactionHist>\n      <TheadStyle>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </TheadStyle>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <TrStyle key={id}>\n              <TransactionItem\n               type={type}\n               amount={amount}\n               currency={currency}\n          />\n          </TrStyle>\n        ))}\n      </tbody>\n    </TransactionHist>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import user from \"./components/sourse-data/user.json\";\nimport { Profile } from \"./components/profile/Profile\";\n\nimport statistical from \"./components/sourse-data/statistical-data.json\";\nimport { Statistics } from \"./components/statistics/Statistics\";\n\nimport { FriendList } from \"./components/friendList/FriendList\";\nimport friends from \"./components/sourse-data/friends.json\";\n\nimport { TransactionHistory } from \"./components/transaction/TransactionHistory\";\nimport transactions from \"./components/sourse-data/transactions.json\";\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        src={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statistical} />\n      <Statistics stats={statistical} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}